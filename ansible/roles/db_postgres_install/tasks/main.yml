- name: Ensure group "postgres" exists
  group:
    name: "{{ pg_group }}"
    state: present

- name: Add the user 'postgres' with a bash shell, appending the group 'postgres' to the user's groups
  user:
    name: "{{ pg_owner }}"
    shell: /bin/bash
    groups: "{{ pg_group }}"
    append: yes

- name: Unarchive prometheus that needs to be downloaded
  unarchive:
    src: https://ftp.postgresql.org/pub/source/v11.7/postgresql-11.7.tar.gz
    dest: /usr/local/src
    owner: "{{ pg_owner }}"
    group: "{{ pg_group }}"
    remote_src: yes

- name: Install a list of packages
  yum:
    name:
      - "{{ item }}"
    with_items:
      - gcc
      - readline
      - readline-devel
      - zlib
      - zlib-devel

- name: postgres install check
  shell: ls -l /usr/local/pgsql/bin
  register: result
  failed_when: result.rc not in [0, 1, 2]

- name: configure & make & make install
  shell: cd /usr/local/src/postgresql-11.7 && ./configure --with-libxml && make && make install
  when: result.rc == 2

- name: Make Directory for DB Cluster
  file:
    path: "{{ directory_pgdata }}"
    state: directory
    owner: "{{ pg_owner }}"
    group: "{{ pg_group }}"
    mode: '0700' 

- name: Copy bash_profile
  copy:
    src: templates/postgres_bash_profile
    dest: /home/postgres/.bash_profile
    owner: "{{ pg_owner }}"
    group: "{{ pg_group }}"
    mode: 0644
    backup: yes


- name: Copy pg_statsinfo-11.0-1.pg11.rhel7.x86_64.rpm
  copy:
    src: templates/pg_statsinfo-11.0-1.pg11.rhel7.x86_64.rpm
    dest: /home/postgres/pg_statsinfo-11.0-1.pg11.rhel7.x86_64.rpm
    owner: "{{ pg_owner }}"
    group: "{{ pg_group }}"
    mode: 0644
    backup: yes

- name: install nginx rpm from a local file
  yum: 
    name: /home/postgres/pg_statsinfo-11.0-1.pg11.rhel7.x86_64.rpm
    state: present
  
- name: Copy pg_statsinfo-11.0-1.pg11.rhel7.x86_64.rpm
  copy:
    src: templates/pg_stats_reporter-11.0-1.el7.noarch.rpm
    dest: /home/postgres/pg_stats_reporter-11.0-1.el7.noarch.rpm
    owner: "{{ pg_owner }}"
    group: "{{ pg_group }}"
    mode: 0644
    backup: yes

- name: install nginx rpm from a local file
  yum: 
    name: /home/postgres/pg_stats_reporter-11.0-1.el7.noarch.rpm
    state: present
  

- name: Copy pg_stat_reporter config
  copy:
    src: templates/pg_stats_reporter.ini
    dest: /etc/pg_stats_reporter.ini
    owner: "{{ pg_owner }}"
    group: "{{ pg_group }}"
    mode: 0644
    backup: yes
